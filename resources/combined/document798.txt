static int   devinit snd cs5530 create struct snd card  card 
				       struct pci dev  pci 
				       struct snd cs5530   rchip 
{
	struct snd cs5530  chip 
	unsigned long sb base 
	u8 irq  dma8  dma16 = 0 
	u16 map 
	void   iomem  mem 
	int err 

	static struct snd device ops ops = {
		 dev free = snd cs5530 dev free 
	} 
	 rchip = NULL 

	err = pci enable device pci  
 	if  err   0 
		return err 

	chip = kzalloc sizeof  chip   GFP KERNEL  
	if  chip == NULL  {
		pci disable device pci  
		return  ENOMEM 
	}

	chip card = card 
	chip pci = pci 

	err = pci request regions pci   CS5530   
	if  err   0  {
		kfree chip   
		pci disable device pci  
		return err 
	}
	chip pci base = pci resource start pci  0  

	mem = pci ioremap bar pci  0  
	if  mem == NULL  {
		kfree chip  
		pci disable device pci  
		return  EBUSY 
	}

	map = readw mem + 0x18  
	iounmap mem  

	   Map bits
		0 1	  0x20 + 0x200 = sb base
		2	sb enable
		3	adlib enable
		5	MPU enable 0x330
		6	MPU enable 0x300

	   The other bits may be used internally so must be masked   

	sb base = 0x220 + 0x20    map   3  

	if  map    1  2  
		printk KERN INFO  CS5530  XpressAudio at 0x lx\n   sb base  
	else {
		printk KERN ERR  Could not find XpressAudio \n   
		snd cs5530 free chip  
		return  ENODEV 
	}

	if  map    1  5  
		printk KERN INFO  CS5530  MPU at 0x300\n   
	else if  map    1  6  
		printk KERN INFO  CS5530  MPU at 0x330\n   

	irq = snd cs5530 mixer read sb base  0x80    0x0F 
	dma8 = snd cs5530 mixer read sb base  0x81  

	if  dma8   0x20 
		dma16 = 5 
	else if  dma8   0x40 
		dma16 = 6 
	else if  dma8   0x80 
		dma16 = 7 
	else {
		printk KERN ERR  CS5530  No 16bit DMA enabled\n   
		snd cs5530 free chip  
		return  ENODEV 
	}

	if  dma8   0x01 
		dma8 = 0 
	else if  dma8   02 
		dma8 = 1 
	else if  dma8   0x08 
		dma8 = 3 
	else {
		printk KERN ERR  CS5530  No 8bit DMA enabled\n   
		snd cs5530 free chip  
		return  ENODEV 
	}

	if  irq   1 
		irq = 9 
	else if  irq   2 
		irq = 5 
	else if  irq   4 
		irq = 7 
	else if  irq   8 
		irq = 10 
	else {
		printk KERN ERR  CS5530  SoundBlaster IRQ not set\n   
		snd cs5530 free chip  
		return  ENODEV 
	}

	printk KERN INFO  CS5530  IRQ   d DMA8   d DMA16   d\n   irq  dma8  
									dma16  

	err = snd sbdsp create card  sb base  irq  snd sb16dsp interrupt  dma8 
						dma16  SB HW CS5530   chip sb  
	if  err   0  {
		printk KERN ERR  CS5530  Could not create SoundBlaster\n   
		snd cs5530 free chip  
		return err 
	}

	err = snd sb16dsp pcm chip sb  0   chip sb pcm  
	if  err   0  {
		printk KERN ERR  CS5530  Could not create PCM\n   
		snd cs5530 free chip  
		return err 
	}

	err = snd sbmixer new chip sb  
	if  err   0  {
		printk KERN ERR  CS5530  Could not create Mixer\n   
		snd cs5530 free chip  
		return err 
	}

	err = snd device new card  SNDRV DEV LOWLEVEL  chip   ops  
	if  err   0  {
		snd cs5530 free chip  
		return err 
	}

	snd card set dev card   pci dev  
	 rchip = chip 
	return 0 
}


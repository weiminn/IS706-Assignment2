static inline unsigned int calc linear pos struct viadev  viadev  unsigned int idx 
					   unsigned int count 
{
	unsigned int size  base  res 

	size = viadev idx table idx  size 
	base = viadev idx table idx  offset 
	res = base + size   count 
	if  res  = viadev bufsize 
		res  = viadev bufsize 

	   check the validity of the calculated position   
	if  size   count  {
		snd printd KERN ERR  invalid via82xx cur ptr  size =  d  count =  d \n  
			    int size   int count  
		res = viadev lastpos 
	} else {
		if    count  {
			   Some mobos report count = 0 on the DMA boundary 
			   i e  count = size indeed 
			   Let's check whether this step is above the expected size 
			   
			int delta = res   viadev lastpos 
			if  delta   0 
				delta += viadev bufsize 
			if   unsigned int delta   viadev fragsize 
				res = base 
		}
		if  check invalid pos viadev  res   {
#ifdef POINTER DEBUG
			printk KERN DEBUG  fail  idx =  i  i  lastpos = 0x x   
			        bufsize2 = 0x x  offsize = 0x x  size = 0x x   
			        count = 0x x\n   idx  viadev tbl entries 
			       viadev lastpos  viadev bufsize2 
			       viadev idx table idx  offset 
			       viadev idx table idx  size  count  
#endif
			   count register returns full size when end of buffer is reached   
			res = base + size 
			if  check invalid pos viadev  res   {
				snd printd KERN ERR  invalid via82xx cur ptr  2    
					    using last valid pointer\n   
				res = viadev lastpos 
			}
		}
	}
	return res 
}


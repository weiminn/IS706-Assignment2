   The hardware volume works by incrementing   decrementing 2 counters
    without wrap around  in response to volume button presses and then
   generating an interrupt  The pair of counters is stored in bits 1 3 and 5 7
   of a byte wide register  The meaning of bits 0 and 4 is unknown    
static void es1968 update hw volume unsigned long private data 
{
	struct es1968  chip =  struct es1968    private data 
	int x  val 
#ifndef CONFIG SND ES1968 INPUT
	unsigned long flags 
#endif

	   Figure out which volume control button was pushed 
	   based on differences from the default register
	   values    
	x = inb chip io port + 0x1c    0xee 
	   Reset the volume control registers    
	outb 0x88  chip io port + 0x1c  
	outb 0x88  chip io port + 0x1d  
	outb 0x88  chip io port + 0x1e  
	outb 0x88  chip io port + 0x1f  

	if  chip in suspend 
		return 

#ifndef CONFIG SND ES1968 INPUT
	if    chip master switch ||   chip master volume 
		return 

	   FIXME  we can't call snd ac97   functions since here is in tasklet    
	spin lock irqsave  chip ac97 lock  flags  
	val = chip ac97 regs AC97 MASTER  
	switch  x  {
	case 0x88 
		   mute   
		val ^= 0x8000 
		chip ac97 regs AC97 MASTER  = val 
		outw val  chip io port + ESM AC97 DATA  
		outb AC97 MASTER  chip io port + ESM AC97 INDEX  
		snd ctl notify chip card  SNDRV CTL EVENT MASK VALUE 
			        chip master switch id  
		break 
	case 0xaa 
		   volume up   
		if   val   0x7f    0 
			val   
		if   val   0x7f00    0 
			val  = 0x0100 
		chip ac97 regs AC97 MASTER  = val 
		outw val  chip io port + ESM AC97 DATA  
		outb AC97 MASTER  chip io port + ESM AC97 INDEX  
		snd ctl notify chip card  SNDRV CTL EVENT MASK VALUE 
			        chip master volume id  
		break 
	case 0x66 
		   volume down   
		if   val   0x7f    0x1f 
			val++ 
		if   val   0x7f00    0x1f00 
			val += 0x0100 
		chip ac97 regs AC97 MASTER  = val 
		outw val  chip io port + ESM AC97 DATA  
		outb AC97 MASTER  chip io port + ESM AC97 INDEX  
		snd ctl notify chip card  SNDRV CTL EVENT MASK VALUE 
			        chip master volume id  
		break 
	}
	spin unlock irqrestore  chip ac97 lock  flags  
#else
	if   chip input dev 
		return 

	val = 0 
	switch  x  {
	case 0x88 
		   The counters have not changed  yet we've received a HV
		   interrupt  According to tests run by various people this
		   happens when pressing the mute button    
		val = KEY MUTE 
		break 
	case 0xaa 
		   counters increased by 1   volume up   
		val = KEY VOLUMEUP 
		break 
	case 0x66 
		   counters decreased by 1   volume down   
		val = KEY VOLUMEDOWN 
		break 
	}

	if  val  {
		input report key chip input dev  val  1  
		input sync chip input dev  
		input report key chip input dev  val  0  
		input sync chip input dev  
	}
#endif
}


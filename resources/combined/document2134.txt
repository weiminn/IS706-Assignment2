  
    Interrupt handler
    Used for 686 and 8233A
   
static irqreturn t snd via686 interrupt int irq  void  dev id 
{
	struct via82xx  chip = dev id 
	unsigned int status 
	unsigned int i 

	status = inl VIAREG chip  SGD SHADOW   
	if     status   chip intr mask   {
		if  chip rmidi 
			   check mpu401 interrupt   
			return snd mpu401 uart interrupt irq  chip rmidi private data  
		return IRQ NONE 
	}

	   check status for each stream   
	spin lock  chip reg lock  
	for  i = 0  i   chip num devs  i++  {
		struct viadev  viadev =  chip devs i  
		unsigned char c status = inb VIADEV REG viadev  OFFSET STATUS   
		if     c status    VIA REG STAT EOL|VIA REG STAT FLAG|VIA REG STAT STOPPED   
			continue 
		if  viadev substream    viadev running  {
			  
			   Update hwptr done based on 'period elapsed'
			   interrupts  We'll use it  when the chip returns 0 
			   for OFFSET CURR COUNT 
			   
			if  c status   VIA REG STAT EOL 
				viadev hwptr done = 0 
			else
				viadev hwptr done += viadev fragsize 
			viadev in interrupt = c status 
			spin unlock  chip reg lock  
			snd pcm period elapsed viadev substream  
			spin lock  chip reg lock  
			viadev in interrupt = 0 
		}
		outb c status  VIADEV REG viadev  OFFSET STATUS       ack   
	}
	spin unlock  chip reg lock  
	return IRQ HANDLED 
}


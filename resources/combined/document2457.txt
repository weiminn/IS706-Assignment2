   
   tfrc calc x   Calculate the send rate as per section 3 1 of RFC3448
   @s  packet size          in bytes
   @R  RTT                  scaled by 1000000    i e   microseconds 
   @p  loss ratio estimate  scaled by 1000000
   Returns X calc           in bytes per second  not scaled  
   
u32 tfrc calc x u16 s  u32 R  u32 p 
{
	u16 index 
	u32 f 
	u64 result 

	   check against invalid parameters and divide by zero     
	BUG ON p    1000000  		   p must not exceed 100      
	BUG ON p == 0  			   f 0  = 0  divide by zero   
	if  R == 0  {			   possible  divide by zero   
		DCCP CRIT  WARNING  RTT is 0  returning maximum X calc    
		return ~0U 
	}

	if  p  = TFRC CALC X SPLIT 		{        0 0000   p  = 0 05     
		if  p   TFRC SMALLEST P  {	         0 0000   p    0 0001   
			DCCP WARN  Value of p   d  below resolution   
				   Substituting  d\n   p  TFRC SMALLEST P  
			index = 0 
		} else				         0 0001  = p  = 0 05    
			index =  p TFRC SMALLEST P   1 

		f = tfrc calc x lookup index  1  

	} else {				         0 05      p  = 1 00    
		index = p  1000000 TFRC CALC X ARRSIZE    1 

		f = tfrc calc x lookup index  0  
	}

	  
	   Compute X = s  R f p   in bytes per second 
	   Since f p  and R are both scaled by 1000000  we need to multiply by
	   1000000^2  To avoid overflow  the result is computed in two stages 
	   This works under almost all reasonable operational conditions  for a
	   wide range of parameters  Yet  should some strange combination of
	   parameters result in overflow  the use of scaled div32 will catch
	   this and return UINT MAX   which is a logically adequate consequence 
	   
	result = scaled div s  R  
	return scaled div32 result  f  
}


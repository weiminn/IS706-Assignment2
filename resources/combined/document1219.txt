   FIXME  this IRQ routine doesn't really support IRQ sharing  we always
   return IRQ HANDLED no matter whether we actually had an IRQ flag or not  
   ALS4000a PDF writes that while ACKing IRQ in PCI block will  not  ACK
   the IRQ in the SB core  ACKing IRQ in SB block  will  ACK the PCI IRQ
   register  alt port + ALS4K IOB 0E IRQTYPE SB CR1E MPU   Probably something
   could be optimized here to query write one register only   
   And even if both registers need to be queried  then there's still the
   question of whether it's actually correct to ACK PCI IRQ before reading
   SB IRQ like we do now  since ALS4000a PDF mentions that PCI IRQ will  clear 
   SB IRQ status 
    hmm  SPECS PAGE  38 mentions it the other way around  
   And do we  really  need the lock here for  reading  SB DSP4 IRQSTATUS??
     
static irqreturn t snd als4000 interrupt int irq  void  dev id 
{
	struct snd sb  chip = dev id 
	unsigned pci irqstatus 
	unsigned sb irqstatus 

	   find out which bit of the ALS4000 PCI block produced the interrupt 
	   SPECS PAGE  38  5   
	pci irqstatus = snd als4k iobase readb chip alt port 
				 ALS4K IOB 0E IRQTYPE SB CR1E MPU  
	if   pci irqstatus   ALS4K IOB 0E SB DMA IRQ 
	     chip playback substream      playback   
		snd pcm period elapsed chip playback substream  
	if   pci irqstatus   ALS4K IOB 0E CR1E IRQ 
	     chip capture substream      capturing   
		snd pcm period elapsed chip capture substream  
	if   pci irqstatus   ALS4K IOB 0E MPU IRQ 
	     chip rmidi      MPU401 interrupt   
		snd mpu401 uart interrupt irq  chip rmidi private data  
	   ACK the PCI block IRQ   
	snd als4k iobase writeb chip alt port 
			 ALS4K IOB 0E IRQTYPE SB CR1E MPU  pci irqstatus  
	
	spin lock  chip mixer lock  
	   SPECS PAGE  20   
	sb irqstatus = snd sbmixer read chip  SB DSP4 IRQSTATUS  
	spin unlock  chip mixer lock  
	
	if  sb irqstatus   SB IRQTYPE 8BIT 
		snd sb ack 8bit chip  
	if  sb irqstatus   SB IRQTYPE 16BIT 
		snd sb ack 16bit chip  
	if  sb irqstatus   SB IRQTYPE MPUIN 
		inb chip mpu port  
	if  sb irqstatus   ALS4K IRQTYPE CR1E DMA 
		snd als4k iobase readb chip alt port 
					ALS4K IOB 16 ACK FOR CR1E  

	   printk KERN INFO  als4000  irq 0x 04x 0x 04x\n  
					 pci irqstatus  sb irqstatus     

	   only ack the things we actually handled above   
	return IRQ RETVAL 
	      pci irqstatus    ALS4K IOB 0E SB DMA IRQ|ALS4K IOB 0E CR1E IRQ|
				ALS4K IOB 0E MPU IRQ  
	  ||  sb irqstatus    SB IRQTYPE 8BIT|SB IRQTYPE 16BIT|
				SB IRQTYPE MPUIN|ALS4K IRQTYPE CR1E DMA  
	  
}


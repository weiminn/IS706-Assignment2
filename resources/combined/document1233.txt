static int   devinit snd card als4000 probe struct pci dev  pci 
					  const struct pci device id  pci id 
{
	static int dev 
	struct snd card  card 
	struct snd card als4000  acard 
	unsigned long iobase 
	struct snd sb  chip 
	struct snd opl3  opl3 
	unsigned short word 
	int err 

	if  dev  = SNDRV CARDS 
		return  ENODEV 
	if   enable dev   {
		dev++ 
		return  ENOENT 
	}

	   enable PCI device   
	if   err = pci enable device pci     0  {
		return err 
	}
	   check  if we can restrict PCI DMA transfers to 24 bits   
	if  pci set dma mask pci  DMA BIT MASK 24     0 ||
	    pci set consistent dma mask pci  DMA BIT MASK 24     0  {
		snd printk KERN ERR  architecture does not support 24bit PCI busmaster DMA\n   
		pci disable device pci  
		return  ENXIO 
	}

	if   err = pci request regions pci   ALS4000      0  {
		pci disable device pci  
		return err 
	}
	iobase = pci resource start pci  0  

	pci read config word pci  PCI COMMAND   word  
	pci write config word pci  PCI COMMAND  word | PCI COMMAND IO  
	pci set master pci  
	
	err = snd card create index dev   id dev   THIS MODULE  
			      sizeof  acard     private data  acard    
			       card  
	if  err   0  {
		pci release regions pci  
		pci disable device pci  
		return err 
	}

	acard = card private data 
	acard pci = pci 
	acard iobase = iobase 
	card private free = snd card als4000 free 

	   disable all legacy ISA stuff   
	snd als4000 set addr acard iobase  0  0  0  0  

	if   err = snd sbdsp create card 
				    iobase + ALS4K IOB 10 ADLIB ADDR0 
				    pci irq 
		   internally registered as IRQF SHARED in case of ALS4000 SB   
				    snd als4000 interrupt 
				     1 
				     1 
				    SB HW ALS4000 
				     chip     0  {
		goto out err 
	}
	acard chip = chip 

	chip pci = pci 
	chip alt port = iobase 
	snd card set dev card   pci dev  

	snd als4000 configure chip  

	strcpy card driver   ALS4000   
	strcpy card shortname   Avance Logic ALS4000   
	sprintf card longname    s at 0x lx  irq  i  
		card shortname  chip alt port  chip irq  

	if   err = snd mpu401 uart new  card  0  MPU401 HW ALS4000 
					iobase + ALS4K IOB 30 MIDI DATA 
					MPU401 INFO INTEGRATED 
					pci irq  0   chip rmidi     0  {
		printk KERN ERR  als4000  no MPU 401 device at 0x lx?\n  
				iobase + ALS4K IOB 30 MIDI DATA  
		goto out err 
	}
	   FIXME  ALS4000 has interesting MPU401 configuration features
	   at ALS4K CR1A MPU401 UART MODE CONTROL
	    pass thru   UART switching  fast MIDI clock  etc   
	   however there doesn't seem to be an ALSA API for this   
	   SPECS PAGE  21   

	if   err = snd als4000 pcm chip  0     0  {
		goto out err 
	}
	if   err = snd sbmixer new chip     0  {
		goto out err 
	}	    

	if  snd opl3 create card 
				iobase + ALS4K IOB 10 ADLIB ADDR0 
				iobase + ALS4K IOB 12 ADLIB ADDR2 
			    OPL3 HW AUTO  1   opl3    0  {
		printk KERN ERR  als4000  no OPL device at 0x lx 0x lx?\n  
			   iobase + ALS4K IOB 10 ADLIB ADDR0 
			   iobase + ALS4K IOB 12 ADLIB ADDR2  
	} else {
		if   err = snd opl3 hwdep new opl3  0  1  NULL     0  {
			goto out err 
		}
	}

	snd als4000 create gameport acard  dev  

	if   err = snd card register card     0  {
		goto out err 
	}
	pci set drvdata pci  card  
	dev++ 
	err = 0 
	goto out 

out err 
	snd card free card  
	
out 
	return err 
}


static void portman write midi struct portman  pm  
			       int port  u8 mididata 
{
	int command =   port + 4     1  

	   Get entering data byte and port number in BL and BH respectively 
	   Set up Tx Channel address field for use with PP Cmd Register 
	   Store address field in BH register 
	   Inputs       AH = Output port number  0  3  
	                AL = Data byte 
	      command = TXDATA0 | INT EN 
	   Align port num with address field  b1   b3  
	   set address for TXDatax  Strobe=0
	   
	command |= INT EN 

	   Disable interrupts so that the process is not interrupted  then 
	   write the address associated with the current Tx channel to the 
	   PP Command Reg   Do not set the Strobe signal yet 
	   

	do {
		portman write command pm  command  

		   While the address lines settle  write parallel output data to 
		   PP Data Reg   This has no effect until Strobe signal is asserted 
		   

		portman write data pm  mididata  
		
		   If PCP channel's TxEmpty is set  TxEmpty is read through the PP
		   Status Register   then go write data   Else go back and wait 
		   
	} while   portman read status pm    TXEMPTY   = TXEMPTY  

	   TxEmpty is set   Maintain PC P destination address and assert
	   Strobe through the PP Command Reg   This will Strobe data into
	   the PC P transmitter and set the PC P BUSY signal 
	   

	portman write command pm  command | STROBE  

	   Wait for strobe line to settle and echo back through hardware 
	   Once it has echoed back  assume that the address and data lines
	   have settled 
	   

	while   portman read status pm    ESTB  == 0 
		cpu relax   

	   Release strobe and immediately re allow interrupts    
	portman write command pm  command  

	while   portman read status pm    ESTB  == ESTB 
		cpu relax   

	   PC P BUSY is now set   We must wait until BUSY resets itself 
	   We'll reenable ints while we're waiting 
	   

	while   portman read status pm    BUSY  == BUSY 
		cpu relax   

	   Data sent    
}


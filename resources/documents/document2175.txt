  
  
   
static int   devinit snd via8233 init misc struct via82xx  chip 
{
	int i  err  caps 
	unsigned char val 

	caps = chip chip type == TYPE VIA8233A ? 1   2 
	for  i = 0  i   caps  i++  {
		snd via8233 capture source index = i 
		err = snd ctl add chip card  snd ctl new1  snd via8233 capture source  chip   
		if  err   0 
			return err 
	}
	if  ac97 can spdif chip ac97   {
		err = snd ctl add chip card  snd ctl new1  snd via8233 dxs3 spdif control  chip   
		if  err   0 
			return err 
	}
	if  chip chip type  = TYPE VIA8233A  {
		   when no h w PCM volume control is found  use DXS volume control
		   as the PCM vol control
		   
		struct snd ctl elem id sid 
		memset  sid  0  sizeof sid   
		strcpy sid name   PCM Playback Volume   
		sid iface = SNDRV CTL ELEM IFACE MIXER 
		if    snd ctl find id chip card   sid   {
			snd printd KERN INFO  Using DXS as PCM Playback\n   
			err = snd ctl add chip card  snd ctl new1  snd via8233 pcmdxs volume control  chip   
			if  err   0 
				return err 
		}
		else    Using DXS when PCM emulation is enabled is really weird   
		{
			for  i = 0  i   4  ++i  {
				struct snd kcontrol  kctl 

				kctl = snd ctl new1 
					 snd via8233 dxs volume control  chip  
				if   kctl 
					return  ENOMEM 
				kctl id subdevice = i 
				err = snd ctl add chip card  kctl  
				if  err   0 
					return err 
				chip dxs controls i  = kctl 
			}
		}
	}
	   select spdif data slot 10 11   
	pci read config byte chip pci  VIA8233 SPDIF CTRL   val  
	val =  val   ~VIA8233 SPDIF SLOT MASK  | VIA8233 SPDIF SLOT 1011 
	val  = ~VIA8233 SPDIF DX3     SPDIF off as default   
	pci write config byte chip pci  VIA8233 SPDIF CTRL  val  

	return 0 
}


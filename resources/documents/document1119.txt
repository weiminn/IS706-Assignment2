snd azf3328 interrupt int irq  void  dev id 
{
	struct snd azf3328  chip = dev id 
	u8 status 
#if DEBUG CODEC
	static unsigned long irq count 
#endif

	status = snd azf3328 ctrl inb chip  IDX IO IRQSTATUS  

           fast path out  to ease interrupt sharing   
	if    status  
		 IRQ PLAYBACK|IRQ RECORDING|IRQ I2S OUT
		|IRQ GAMEPORT|IRQ MPU401|IRQ TIMER 
	  
		return IRQ NONE     must be interrupt for another device   

	snd azf3328 dbgcodec 
		 irq count  ld  IDX IO IRQSTATUS  04x\n  
			irq count++    debug only    
			status
	  

	if  status   IRQ TIMER  {
		   snd azf3328 dbgcodec  timer  ld\n  
			snd azf3328 codec inl chip  IDX IO TIMER VALUE 
				  TIMER VALUE MASK
		     
		if  chip timer 
			snd timer interrupt chip timer  chip timer sticks  
		   ACK timer   
                spin lock  chip reg lock  
		snd azf3328 ctrl outb chip  IDX IO TIMER VALUE + 3  0x07  
		spin unlock  chip reg lock  
		snd azf3328 dbgcodec  azt3328  timer IRQ\n   
	}

	if  status    IRQ PLAYBACK|IRQ RECORDING|IRQ I2S OUT  
		snd azf3328 pcm interrupt chip codecs  status  

	if  status   IRQ GAMEPORT 
		snd azf3328 gameport interrupt chip  

	   MPU401 has less critical IRQ requirements
	   than timer and playback recording  right?   
	if  status   IRQ MPU401  {
		snd mpu401 uart interrupt irq  chip rmidi private data  

		   hmm  do we have to ack the IRQ here somehow?
		   If so  then I don't know how yet      
		snd azf3328 dbgcodec  azt3328  MPU401 IRQ\n   
	}
	return IRQ HANDLED 
}


static int snd intel8x0 ich chip init struct intel8x0  chip  int probing 
{
	unsigned long end time 
	unsigned int status  nstatus 
	unsigned int cnt 
	int err 

	   put logic to right state   
	   first clear status bits   
	status = ICH RCS | ICH MCINT | ICH POINT | ICH PIINT 
	if  chip device type == DEVICE NFORCE 
		status |= ICH NVSPINT 
	cnt = igetdword chip  ICHREG GLOB STA   
	iputdword chip  ICHREG GLOB STA   cnt   status  

	if  snd intel8x0 ich chip can cold reset chip  
		err = snd intel8x0 ich chip cold reset chip  
	else
		err = snd intel8x0 ich chip reset chip  
	if  err   0 
		return err 

	if  probing  {
		   wait for any codec ready status 
		   Once it becomes ready it should remain ready
		   as long as we do not disable the ac97 link 
		   
		end time = jiffies + HZ 
		do {
			status = igetdword chip  ICHREG GLOB STA    
				chip codec isr bits 
			if  status 
				break 
			schedule timeout uninterruptible 1  
		} while  time after eq end time  jiffies   
		if    status  {
			   no codec is found   
			snd printk KERN ERR  codec ready  codec is not ready  0x x \n  
				   igetdword chip  ICHREG GLOB STA    
			return  EIO 
		}

		   wait for other codecs ready status    
		end time = jiffies + HZ   4 
		while  status  = chip codec isr bits   
		       time after eq end time  jiffies   {
			schedule timeout uninterruptible 1  
			status |= igetdword chip  ICHREG GLOB STA    
				chip codec isr bits 
		}

	} else {
		   resume phase   
		int i 
		status = 0 
		for  i = 0  i   chip ncodecs  i++ 
			if  chip ac97 i  
				status |= chip codec bit chip ac97 sdin i   
		   wait until all the probed codecs are ready   
		end time = jiffies + HZ 
		do {
			nstatus = igetdword chip  ICHREG GLOB STA    
				chip codec isr bits 
			if  status == nstatus 
				break 
			schedule timeout uninterruptible 1  
		} while  time after eq end time  jiffies   
	}

	if  chip device type == DEVICE SIS  {
		   unmute the output on SIS7012   
		iputword chip  0x4c  igetword chip  0x4c  | 1  
	}
	if  chip device type == DEVICE NFORCE     spdif aclink  {
		   enable SPDIF interrupt   
		unsigned int val 
		pci read config dword chip pci  0x4c   val  
		val |= 0x1000000 
		pci write config dword chip pci  0x4c  val  
	}
      	return 0 
}


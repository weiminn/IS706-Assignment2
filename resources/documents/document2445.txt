   
   tfrc rx hist sample rtt     Sample RTT from timestamp   CCVal
   Based on ideas presented in RFC 4342  8 1  Returns 0 if it was not able
   to compute a sample with given data   calling function should check this 
   
u32 tfrc rx hist sample rtt struct tfrc rx hist  h  const struct sk buff  skb 
{
	u32 sample = 0 
	    delta v = SUB16 dccp hdr skb  dccph ccval 
			    tfrc rx hist rtt last s h  tfrchrx ccval  

	if  delta v   1 || delta v   4  {	   unsuitable CCVal delta   
		if  h rtt sample prev == 2  {	   previous candidate stored   
			sample = SUB16 tfrc rx hist rtt prev s h  tfrchrx ccval 
				       tfrc rx hist rtt last s h  tfrchrx ccval  
			if  sample 
				sample = 4   sample  
				         ktime us delta tfrc rx hist rtt prev s h  tfrchrx tstamp 
							tfrc rx hist rtt last s h  tfrchrx tstamp  
			else      
				   FIXME  This condition is in principle not
				   possible but occurs when CCID is used for
				   two way data traffic  I have tried to trace
				   it  but the cause does not seem to be here 
				   
				DCCP BUG  please report to dccp@vger kernel org 
					   =  prev =  u  last =  u  
					 tfrc rx hist rtt prev s h  tfrchrx ccval 
					 tfrc rx hist rtt last s h  tfrchrx ccval  
		} else if  delta v   1  {
			h rtt sample prev = 1 
			goto keep ref for next time 
		}

	} else if  delta v == 4     optimal match   
		sample = ktime to us net timedelta tfrc rx hist rtt last s h  tfrchrx tstamp   
	else {			    suboptimal match   
		h rtt sample prev = 2 
		goto keep ref for next time 
	}

	if  unlikely sample   DCCP SANE RTT MAX   {
		DCCP WARN  RTT sample  u too large  using max\n   sample  
		sample = DCCP SANE RTT MAX 
	}

	h rtt sample prev = 0 	          use current entry as next reference   
keep ref for next time 

	return sample 
}


static int crypto gcm setkey struct crypto aead  aead  const u8  key 
			     unsigned int keylen 
{
	struct crypto gcm ctx  ctx = crypto aead ctx aead  
	struct crypto ahash  ghash = ctx ghash 
	struct crypto ablkcipher  ctr = ctx ctr 
	struct {
		be128 hash 
		u8 iv 8  

		struct crypto gcm setkey result result 

		struct scatterlist sg 1  
		struct ablkcipher request req 
	}  data 
	int err 

	crypto ablkcipher clear flags ctr  CRYPTO TFM REQ MASK  
	crypto ablkcipher set flags ctr  crypto aead get flags aead   
				   CRYPTO TFM REQ MASK  

	err = crypto ablkcipher setkey ctr  key  keylen  
	if  err 
		return err 

	crypto aead set flags aead  crypto ablkcipher get flags ctr   
				       CRYPTO TFM RES MASK  

	data = kzalloc sizeof  data  + crypto ablkcipher reqsize ctr  
		       GFP KERNEL  
	if   data 
		return  ENOMEM 

	init completion  data result completion  
	sg init one data sg   data hash  sizeof data hash   
	ablkcipher request set tfm  data req  ctr  
	ablkcipher request set callback  data req  CRYPTO TFM REQ MAY SLEEP |
						    CRYPTO TFM REQ MAY BACKLOG 
					crypto gcm setkey done 
					 data result  
	ablkcipher request set crypt  data req  data sg  data sg 
				     sizeof data hash   data iv  

	err = crypto ablkcipher encrypt  data req  
	if  err ==  EINPROGRESS || err ==  EBUSY  {
		err = wait for completion interruptible 
			 data result completion  
		if   err 
			err = data result err 
	}

	if  err 
		goto out 

	crypto ahash clear flags ghash  CRYPTO TFM REQ MASK  
	crypto ahash set flags ghash  crypto aead get flags aead   
			       CRYPTO TFM REQ MASK  
	err = crypto ahash setkey ghash   u8    data hash  sizeof be128   
	crypto aead set flags aead  crypto ahash get flags ghash   
			      CRYPTO TFM RES MASK  

out 
	kfree data  
	return err 
}


static unsigned short snd cs4281 ac97 read struct snd ac97  ac97 
					   unsigned short reg 
{
	struct cs4281  chip = ac97 private data 
	int count 
	unsigned short result 
	   FIXME  volatile is necessary in the following due to a bug of
	   some gcc versions
	volatile int ac97 num =   volatile struct snd ac97   ac97  num 

	  
	    1  Write ACCAD = Command Address Register = 46Ch for AC97 register address
	    2  Write ACCDA = Command Data Register = 470h    for data to write to AC97 
	    3  Write ACCTL = Control Register = 460h for initiating the write
	    4  Read ACCTL = 460h  DCV should be reset by now and 460h = 17h
	    5  if DCV not cleared  break and return error
	    6  Read ACSTS = Status Register = 464h  check VSTS bit
	   

	snd cs4281 peekBA0 chip  ac97 num ? BA0 ACSDA2   BA0 ACSDA  

	  
	    Setup the AC97 control registers on the CS461x to send the
	    appropriate command to the AC97 to perform the read 
	    ACCAD = Command Address Register = 46Ch
	    ACCDA = Command Data Register = 470h
	    ACCTL = Control Register = 460h
	    set DCV   will clear when process completed
	    set CRW   Read command
	    set VFRM   valid frame enabled
	    set ESYN   ASYNC generation enabled
	    set RSTN   ARST# inactive  AC97 codec not reset
	   

	snd cs4281 pokeBA0 chip  BA0 ACCAD  reg  
	snd cs4281 pokeBA0 chip  BA0 ACCDA  0  
	snd cs4281 pokeBA0 chip  BA0 ACCTL  BA0 ACCTL DCV | BA0 ACCTL CRW |
					    BA0 ACCTL VFRM | BA0 ACCTL ESYN |
			    ac97 num ? BA0 ACCTL TC   0   


	  
	    Wait for the read to occur 
	   
	for  count = 0  count   500  count++  {
		  
		    First  we want to wait for a short time 
	 	   
		udelay 10  
		  
		    Now  check to see if the read has completed 
		    ACCTL = 460h  DCV should be reset by now and 460h = 17h
		   
		if    snd cs4281 peekBA0 chip  BA0 ACCTL    BA0 ACCTL DCV  
			goto   ok1 
	}

	snd printk KERN ERR  AC'97 read problem  ACCTL DCV   reg = 0x x\n   reg  
	result = 0xffff 
	goto   end 
	
        ok1 
	  
	    Wait for the valid status bit to go active 
	   
	for  count = 0  count   100  count++  {
		  
		    Read the AC97 status register 
		    ACSTS = Status Register = 464h
		    VSTS   Valid Status
		   
		if  snd cs4281 peekBA0 chip  ac97 num ? BA0 ACSTS2   BA0 ACSTS    BA0 ACSTS VSTS 
			goto   ok2 
		udelay 10  
	}
	
	snd printk KERN ERR  AC'97 read problem  ACSTS VSTS   reg = 0x x\n   reg  
	result = 0xffff 
	goto   end 

        ok2 
	  
	    Read the data returned from the AC97 register 
	    ACSDA = Status Data Register = 474h
	   
	result = snd cs4281 peekBA0 chip  ac97 num ? BA0 ACSDA2   BA0 ACSDA  

        end 
	return result 
}

